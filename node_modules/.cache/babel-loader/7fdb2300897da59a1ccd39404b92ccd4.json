{"ast":null,"code":"var _jsxFileName = \"/home/bentran/todoApp/src/App.js\";\nimport React, { Component } from 'react';\nimport '../src/App.css';\nimport TaskForm from './component/TaskForm';\nimport Control from './component/Control';\nimport TaskList from './component/TaskList';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onToggleForm = () => {\n      if (this.state.isDisplayForm && this.state.taskEditting !== null) {\n        this.setState({\n          isDisplayForm: true,\n          taskEditting: null\n        });\n      } else {\n        this.setState({\n          isDisplayForm: !this.state.isDisplayForm,\n          taskEditting: null\n        });\n      }\n    };\n\n    this.onCloseForm = () => {\n      this.setState({\n        isDisplayForm: false\n      });\n    };\n\n    this.onShowForm = () => {\n      this.setState({\n        isDisplayForm: true\n      });\n    };\n\n    this.onHandleSubmit = data => {\n      const task = this.state.task;\n\n      if (data.id === '') {\n        data.id = this.generateID();\n        task.push(data);\n      } else {\n        //editting\n        const index = this.findIndex(data.id);\n        task[index] = data;\n      }\n\n      this.setState({\n        task: task,\n        taskEditting: null\n      });\n      localStorage.setItem('task', JSON.stringify(task));\n    };\n\n    this.onUpdateStatus = id => {\n      const task = this.state.task;\n      const index = this.findIndex(id);\n\n      if (index !== -1) {\n        task[index].slStatus = !task[index].slStatus;\n        this.setState({\n          task: task\n        });\n        localStorage.setItem('task', JSON.stringify(task));\n      }\n    };\n\n    this.findIndex = id => {\n      let result = -1;\n      const task = this.state.task; //lay dsach cac task\n\n      task.forEach((task, index) => {\n        if (task.id === id) {\n          result = index;\n        }\n      });\n      return result;\n    };\n\n    this.onDelete = id => {\n      const task = this.state.task;\n      const index = this.findIndex(id);\n\n      if (index !== -1) {\n        task.splice(index, 1);\n        this.setState({\n          task: task\n        });\n        localStorage.setItem('task', JSON.stringify(task));\n      }\n\n      this.onCloseForm();\n    };\n\n    this.onUpdate = id => {\n      const task = this.state.task;\n      const index = this.findIndex(id);\n      const taskEditting = task[index];\n      this.setState({\n        taskEditting: taskEditting\n      });\n      this.onShowForm();\n    };\n\n    this.onFilter = (filterName, filterStatus) => {\n      filterStatus = parseInt(filterStatus, 10);\n      this.setState({\n        filter: {\n          name: filterName.toLowerCase(),\n          status: filterStatus\n        }\n      });\n    };\n\n    this.onSearch = keyword => {\n      this.setState({\n        keyword: keyword\n      });\n      console.log(keyword);\n    };\n\n    this.state = {\n      task: [],\n      isDisplayForm: false,\n      taskEditting: null,\n      filter: {\n        name: '',\n        status: -1\n      },\n      keyword: '',\n      soft: {\n        by: 'name',\n        value: 1\n      }\n    };\n  } //duoc goi khi component dc gắn vào hay còn gọi là khi reset, goi 1 lan\n\n\n  UNSAFE_componentWillMount() {\n    if (localStorage && localStorage.getItem('task')) {\n      const task = JSON.parse(localStorage.getItem('task'));\n      this.setState({\n        task: task\n      });\n    }\n  }\n\n  s4() {\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n  }\n\n  generateID() {\n    return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4();\n  }\n\n  render() {\n    const _this$state = this.state,\n          task = _this$state.task,\n          isDisplayForm = _this$state.isDisplayForm,\n          taskEditting = _this$state.taskEditting; // if(filter) {\n    //   if(filter.name) {\n    //     // console.log(task);\n    //      const tasked = task.filter((task) => {\n    //       return tasked.name.toLowerCase().indexOf(filter.name) !== -1;\n    //     });\n    //   }\n    // }\n\n    const datas = []; // console.log(task);\n\n    task.forEach(item => {\n      if (item.name.indexOf(this.state.keyword) !== -1) {\n        datas.push(item); // console.log(result);\n\n        return datas;\n      }\n    });\n    const elmTaskForm = isDisplayForm ? React.createElement(TaskForm, {\n      onCloseForm: this.onCloseForm,\n      onHandleSubmit: this.onHandleSubmit,\n      taskFormEdit: taskEditting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }) : '';\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      className: \"navbar navbar-inverse\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"navbar-brand\",\n      href: \"a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"State\")), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"QU\\u1EA2N L\\xDD C\\xD4NG VI\\u1EC6C\")), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: isDisplayForm ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, elmTaskForm), React.createElement(\"div\", {\n      className: isDisplayForm ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: this.onToggleForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-times mr-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    })), \"Th\\xEAm c\\xF4ng vi\\u1EC7c\"), React.createElement(Control, {\n      onSearch: this.onSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row mt-15\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(TaskList, {\n      task: task,\n      onUpdateStatus: this.onUpdateStatus,\n      onDelete: this.onDelete,\n      onUpdate: this.onUpdate,\n      onFilter: this.onFilter,\n      datas: this.datas,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/bentran/todoApp/src/App.js"],"names":["React","Component","TaskForm","Control","TaskList","App","constructor","props","onToggleForm","state","isDisplayForm","taskEditting","setState","onCloseForm","onShowForm","onHandleSubmit","data","task","id","generateID","push","index","findIndex","localStorage","setItem","JSON","stringify","onUpdateStatus","slStatus","result","forEach","onDelete","splice","onUpdate","onFilter","filterName","filterStatus","parseInt","filter","name","toLowerCase","status","onSearch","keyword","console","log","soft","by","value","UNSAFE_componentWillMount","getItem","parse","s4","Math","floor","random","toString","substring","render","datas","item","indexOf","elmTaskForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../src/App.css';\nimport TaskForm from './component/TaskForm';\nimport Control from './component/Control';\nimport TaskList from './component/TaskList';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      task:[],\n      isDisplayForm: false,\n      taskEditting: null,\n      filter : {\n        name: '',\n        status: -1,\n      },\n      keyword: '',\n      soft: {\n        by: 'name',\n        value: 1,\n      }\n    }\n  }\n//duoc goi khi component dc gắn vào hay còn gọi là khi reset, goi 1 lan\n  UNSAFE_componentWillMount() { \n    if(localStorage && localStorage.getItem('task')) {\n      const task = JSON.parse(localStorage.getItem('task'));\n      this.setState({\n        task: task \n      });\n    }\n    \n  }\n  s4() {\n    return Math.floor((1+Math.random()) *0x10000).toString(16).substring(1);\n  }\n\n  generateID() {\n    return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4();\n  }\n\n  onToggleForm = () => {\n    if(this.state.isDisplayForm && this.state.taskEditting !== null){\n      this.setState({\n        isDisplayForm : true,\n        taskEditting: null,\n      })\n    }else {\n      this.setState({\n        isDisplayForm : !this.state.isDisplayForm,\n        taskEditting: null\n      })\n    }\n    \n  }\n\n  onCloseForm = () => {\n    this.setState({\n      isDisplayForm : false\n    })\n  }\n\n  onShowForm = () => {\n    this.setState({\n      isDisplayForm : true\n    })\n  }\n\n  onHandleSubmit = (data) => {\n    const {task} = this.state;\n\n    if(data.id === '' ) {\n      data.id = this.generateID();\n      task.push(data);\n    }else {\n      //editting\n      const index = this.findIndex(data.id);\n      task[index] = data;\n    }\n    \n    this.setState({\n      task: task,\n      taskEditting: null\n    });\n    localStorage.setItem('task', JSON.stringify(task));\n  }\n\n  onUpdateStatus = (id) => {\n   const { task } = this.state;\n    const index = this.findIndex(id);\n    \n    if(index !== -1) {\n      task[index].slStatus = !task[index].slStatus;\n      this.setState({\n        task: task\n      });\n      localStorage.setItem('task', JSON.stringify(task));\n    }\n    \n  }\n\n  findIndex = (id) => {\n    let result = -1;\n    const {task} = this.state; //lay dsach cac task\n    task.forEach((task, index) => {\n      if(task.id === id) {\n        result = index;\n      }\n    });\n    return result;\n  }\n\n  onDelete = id => {\n    const { task } = this.state;\n    const index = this.findIndex(id);\n    \n    if(index !== -1) {\n      task.splice(index,1)\n      this.setState({\n        task: task\n      });\n      localStorage.setItem('task', JSON.stringify(task));\n    }\n    this.onCloseForm();\n  }\n\n  onUpdate = id => {\n    const { task } = this.state;\n    const index = this.findIndex(id);\n    const taskEditting = task[index];\n\n    this.setState({\n      taskEditting: taskEditting\n    });\n    this.onShowForm();\n  }\n  onFilter = (filterName, filterStatus) => {\n    filterStatus = parseInt(filterStatus,10);\n    this.setState({\n      filter: {\n        name: filterName.toLowerCase(),\n        status: filterStatus\n      }\n    })\n  }\n  onSearch = keyword => {\n    this.setState({\n      keyword : keyword\n    })\n    console.log(keyword);\n    \n    \n    \n  }\n  render() {\n    const { task, isDisplayForm, taskEditting } = this.state;\n\n    // if(filter) {\n    //   if(filter.name) {\n    //     // console.log(task);\n        \n    //      const tasked = task.filter((task) => {\n    //       return tasked.name.toLowerCase().indexOf(filter.name) !== -1;\n    //     });\n    //   }\n    // }\n\n    const datas = [];\n\n    // console.log(task);\n    \n    task.forEach(item => {\n      if(item.name.indexOf(this.state.keyword)!== -1) {\n        datas.push(item);\n        // console.log(result);\n        \n\n        return datas;\n\n      }\n    })\n  \n    const elmTaskForm = isDisplayForm ? \n    <TaskForm\n      onCloseForm={ this.onCloseForm }\n      onHandleSubmit = {this.onHandleSubmit}\n      taskFormEdit = {taskEditting}\n      /> : '';\n    return (\n      <div className=\"App\"> \n        <nav className=\"navbar navbar-inverse\">\n          <a className=\"navbar-brand\" href=\"a\">State</a>\n        </nav>\n        <div className=\"container\">\n          <div className=\"text-container\">\n            <h1 className=\"text-center\">QUẢN LÝ CÔNG VIỆC</h1>\n          </div>\n          <div className=\"row\">\n            <div className={ isDisplayForm ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : ''}>\n            {elmTaskForm}\n            </div>\n\n            <div className={ isDisplayForm ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8'\n              : 'col-xs-12 col-sm-12 col-md-12 col-lg-12'}>\n              <button type=\"button\" className=\"btn btn-primary\" onClick={this.onToggleForm}>\n                <span><i className=\"fas fa-times mr-10\"></i></span>\n                Thêm công việc\n              </button>\n              {/* search - soft */}\n                <Control onSearch={  this.onSearch } />\n              {/* table  */}\n              <div className=\"row mt-15\">\n                <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                  <TaskList \n                    task={ task } \n                    onUpdateStatus={this.onUpdateStatus} \n                    onDelete={this.onDelete}\n                    onUpdate = { this.onUpdate }\n                    onFilter = { this.onFilter }\n                    datas = {this.datas}/>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}